name: GitHub Classroom Workflow
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  unit-tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install the necessary packages
        run: pip3.10 install -r services/gateway_service/requirements.txt

      - name: Run unit tests for loyalty service
        run: pytest -vs services/loyalty_service/app/unit_tests/tests.py
  
  deploy:
    name: Deploy services
    needs: [unit-tests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: docker/setup-buildx-action@v2
      
      - name: Docker build
        run: docker compose build
        #timeout-minutes: 5

      - name: Docker Hub login
        env:
          CRYANDEX_PASSWORD: ${{ secrets.CRYANDEX_PASSWORD }}
        run: echo "$CRYANDEX_PASSWORD" | docker login -u oauth --password-stdin cr.yandex

      - name: Docker Publish
        run: docker compose push

      - name: Install Helm
        uses: azure/setup-helm@v3
 
      - name: Prepare Kube config
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
          KUBECONFIG_CA_FILE: '${{ secrets.KUBECONFIG_CA }}'
        run: |
          echo "$KUBECONFIG_FILE" > ./kube.config 
          echo "$KUBECONFIG_CA_FILE" > ./ca.pem
      
      - name: Deploy db
        run: |
          echo ${{ secrets.CRYANDEX_PASSWORD }} | sudo cp ./services/reservation_service/sql/init_db.sql ./k8s/postgres-chart/reservations-init-db.sql |
          echo ${{ secrets.CRYANDEX_PASSWORD }} | sudo cp ./services/loyalty_service/sql/init_db.sql ./k8s/postgres-chart/loyalties-init-db.sql |
          helm --kubeconfig ./kube.config upgrade --install db ./k8s/postgres-chart
          
      - name: Deploy app
        env:
          POSTGRES_PASSWORD: test
        run: |
           helm --kubeconfig ./kube.config upgrade --install my-app ./k8s/app-chart \
           --set services.reservation-service.env.DB_DSN="host=db-service user=program password=test dbname=postgres port=5432 user=program password=$POSTGRES_PASSWORD dbname=reservations port=5432" \
           --set services.payment-service.env.DB_DSN="host=db-service user=program password=test dbname=postgres port=5432 user=program password=$POSTGRES_PASSWORD dbname=payments port=5432" \
           --set services.loyalty-service.env.DB_DSN="host=db-service user=program password=test dbname=postgres port=5432 user=program password=$POSTGRES_PASSWORD dbname=loyalties port=5432"
    
      
